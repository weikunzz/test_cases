#!/usr/bin/python
# -*- copyright -*-
#coding:utf-8

import os
import sys
import getopt
import re
import commands
import sqlite3
import json

#code:/usr/bin/
#code:/usr/local/ism/Agent/src/Cli/ClusterCli/
#export PATH=$PATH:/usr/bin/  

def usage():
    print """Help(-h|--help) for icfs-admin-alarmmode:
Usage:
>> icfs-admin-alarmmode----- --test-- --smtp smtp_ip ---- --user user--------->
>-- --passwd passwd -- --sender sender_add -- --recipient recipient_add -----><
Functions: test mail alarm 
Options:
  --test      : test mail alarm
  --smtp      : smtp server ip address 
  --user      : smtp server user
  --passwd    : smtp server passwd
  --sender    : mail sender
  --recipient : mail recipient
Exit status:
  0 if executed successfully
  1 if executed unsuccessfully 

>> icfs-admin-alarmmode----- --mail-- --smtp smtp_ip ---- --user user--------->
>-- --passwd passwd -- --sender sender_add -- --recipient recipient_add -----><
Functions: set mail alarm
Options: 
  --mail: set mail alarm
Exit status:
  0 if executed successfully
  1 if executed unsuccessfully

>> icfs-admin-alarmmode -- --trap ---- --ip trap_ip --- --port port----------><
Functions: set trap alarm
Options:
  --trap: set trap alarm
  --ip  : snmp trap ip address
  --port: snmp trap port
Exit status:
  0 if executed successfully
  1 if executed unsuccessfully"""
  
def Error(num):
    if num==100:
        print "Error(100): Saltstack anomaly"
    if num==610:
        print "Error(610): Invalid input!"
    if num==716:
        print "Error(716): Invalid ip address"
    if num==1100:
        print "Error(1100):service nagios reload FAILED"
    if num==1101:
        print "Error(1101):Configuration file operation FAILED"
    if num==1102:
        print "Error(1102):Test operation FAILED"
    if num==1103:
        print "Error(1103):Invalid mail address"
    if num==1104:
        print "Error(1104):Invalid domain address"

def mail_set():
    try:
        mail_conn = sqlite3.connect("/usr/local/db/alarm.db")
        mail_conn_cu = mail_conn.cursor()
        mail_conn_cu.execute("UPDATE MAIL SET smtp='%s'"%smtp_ip)
        mail_conn_cu.execute("UPDATE MAIL SET user='%s'"%user)
        mail_conn_cu.execute("UPDATE MAIL SET passwd='%s'"%passwd)
        mail_conn_cu.execute("UPDATE MAIL SET sender='%s'"%sender_add)
        mail_conn_cu.execute("UPDATE MAIL SET recipients='%s'"%recipient_add)
        mail_conn_cu.execute("UPDATE MAIL SET subject='%s'"%subject)
        mail_conn_cu.execute("UPDATE MAIL SET body='%s'"%body)
        mail_conn.commit()
#        mail_conn_cu.execute("SELECT * FROM MAIL")
#        print mail_conn_cu.fetchall()
        mail_conn.close()
    except Exception, err:
        Error(1101)
#        print err
        sys.exit(1) 

def trap_set():
    try:
        trap_conn = sqlite3.connect("/usr/local/db/alarm.db")
        trap_conn_cu = trap_conn.cursor()
        trap_conn_cu.execute("UPDATE TRAP SET ip='%s'"%trap_ip)
        trap_conn_cu.execute("UPDATE TRAP SET port='%s'"%trap_port)
        trap_conn.commit()
#        trap_conn_cu.execute("SELECT * FROM TRAP")
#        print trap_conn_cu.fetchall()
        trap_conn.close()
    except Exception, err:
        print "Error(1101): configuration file operation FAILED"
#        print err
        sys.exit(1)

def mail_test():
    try:
        test_jason = {'smtp':'%s'%smtp_ip,'user':'%s'%user,'passwd':'%s'%passwd,\
        'sender':'%s'%sender_add,'recipient':'%s'%recipient_add}
        test_jason = json.dumps(test_jason)
    #    print test_jason,type(test_jason)
    except Exception,err:
        print "Error(1102):Test operation FAILED"
#        print err
        sys.exit(1)
    test_mail_stat,test_mail = commands.getstatusoutput\
    ("/usr/local/ism/Agent/src/Common/icfs-admin-mail --test '%s'"%test_jason)
    if test_mail_stat:
        print "Error(1102):Test operation FAILED"
#        print test_mail
        sys.exit(1)


def ip_check(ipcheck):
    if not re.match\
    (r"^([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-4])\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$",ipcheck):
        Error(716)
        sys.exit(1)

def domain_check(domiancheck):
    if not re.match\
    (r"(?i)^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z0-9]{2,}$",domiancheck)\
    and not re.match\
    (r"^([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-4])\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$",domiancheck):
        Error(1104)
        sys.exit(1)

def mail_check(mailcheck):
    if not re.match\
    (r"(?i)^([a-z0-9]|\_|\-|\.)+@[a-z0-9]+\.[a-z0-9]+\.{0,1}[a-z0-9]+$",mailcheck):
        Error(1103)
        sys.exit(1)

def nagios_reload():
    nagios_reload_stat,nagios_reload_out = commands.getstatusoutput("service nagios reload")
    if nagios_reload_stat:
        print "Error(1100): service nagios reload FAILED"
        sys.exit(1)


if __name__ == '__main__':
##############################################################
    operation = None
    smtp_ip = None
    user = None
    passwd = None
    sender_add = None
    recipient_add = None
    subject = None
    body = None
    trap_ip = None
    trap_port =None
    try:
        options, args = getopt.getopt(sys.argv[1:],
          "h",["help","mail","test","smtp=","user=","passwd=","sender=","recipient=","subject=","body=",
          "trap","ip=","port="]
          )
    except getopt.GetoptError, err:
        Error(610)
        sys.exit(1)
    if options==[]:
        Error(610)
        sys.exit(1)
    if len(sys.argv[0:])==1:
        Error(610)
        sys.exit(1)
    if len(args)!=0:
        if "-" in args:
            Error(610)
            sys.exit(1)
        else:
            Error(610)
            sys.exit(1)
    for o, a in options:
        if o in ("-h","--help") and len(sys.argv[0:])==2:
            if "-h" == sys.argv[1] or "--help" == sys.argv[1]:
                usage()
                sys.exit(0)
        elif o in ("--smtp"):
            smtp_ip = a
            domain_check(smtp_ip)
        elif o in ("--user"):
            user = a
        elif o in ("--passwd"):
            passwd = a
        elif o in ("--sender"):
            sender_add = a
            mail_check(sender_add)
        elif o in ("--recipient"):
            recipient_add = a
            recipient_add_check = recipient_add.split(",")
            for x in recipient_add_check:
                mail_check(x)
        elif o in ("--subject"):
            subject = a
        elif o in ("--body"):
            body = a
        elif o in ("--ip"):
            trap_ip = a
            ip_check(trap_ip)
        elif o in ("--port"):
            trap_port = a
            try:
                trap_port_check = int(trap_port)
                if trap_port_check<=0 or trap_port_check>65535:
                    Error(610)
                    sys.exit(1)                   
            except Exception, err:
                #print err
                Error(610)
                sys.exit(1)
        elif o in ("--mail"):
            if len(sys.argv[0:])==12:
                if "--mail" in sys.argv[1] and "--smtp" in sys.argv[2] and "--user" in sys.argv[4]\
                 and "--passwd" in sys.argv[6] and "--sender" in sys.argv[8] and "--recipient" in sys.argv[10]:
                    operation = "mail_set"               
                else:
                    Error(610)
                    sys.exit(1)
            else:
                Error(610)
                sys.exit(1)
        elif o in ("--trap"):
            if len(sys.argv[0:])==6:
                if "--trap" in sys.argv[1] and "--ip" in sys.argv[2] and "--port" in sys.argv[4]:
                    operation = "trap_set"               
                else:
                    Error(610)
                    sys.exit(1)
            else:
                Error(610)
                sys.exit(1)
        elif o in ("--test"):
            if len(sys.argv[0:])==12:
                if "--test" in sys.argv[1] and "--smtp" in sys.argv[2] and "--user" in sys.argv[4]\
                 and "--passwd" in sys.argv[6] and "--sender" in sys.argv[8] and "--recipient" in sys.argv[10]:
                    operation = "mail_test"
                else:
                    Error(610)
                    sys.exit(1)  

    if operation == None:
        Error(610)
        sys.exit(1)
    if operation == "mail_set":
        mail_set()
    if operation == "trap_set":
        trap_set()
    if operation == "mail_test":
        mail_test()