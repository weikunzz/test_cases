#!/usr/bin/python
#coding:utf-8
# -*- copyright -*-
import getopt
import sys
import commands
import platform
from icfs_util import error


def help():
    print '''Help(-h|--help)for icfs-system-nfs:
Usage:
>> icfs-system-nfs ---- --query ----><
Functions: Query nfs status
Options:
  --query:  query nfs status
Exit status:
  0 if executed successfully
  1 if executed unsuccessfully'''
    sys.exit(0) 


class osInfo():
    def __init__(self, os_name, os_version, os_edtion):
        self.os_name = os_name
        self.os_version = os_version
        self.os_edtion = os_edtion


def get_os_type():
    os_info = platform.linux_distribution()
    return osInfo(os_info[0], os_info[1], os_info[2])


def nfs_status():
    os_type = get_os_type()
    if os_type.os_version.startswith("7."):
        out = commands.getoutput("for i in `cat /etc/hosts | grep -v localhost.localdomain | grep -v ^$ | grep -v ^# | \
        awk '{print $2}' | sort -u` ; do ssh -o ConnectTimeout=2 $i 'systemctl status ganesha' ; done | grep Active")
    elif os_type.os_version.startswith("6."):
        out = commands.getoutput("for i in `cat /etc/hosts | grep -v localhost.localdomain |grep -v ^$ | grep -v ^# | \
         awk '{print $2}' | sort -u` ; do ssh -o ConnectTimeout=2 $i 'service ganesha status' ; done ")
    if "running" in out:
        print "Service status: RUNNING"
    else:
        print "Service status: STOPPED"

if __name__ == '__main__':
    operation = None
    try:
        opts, args = getopt.getopt(sys.argv[1:], 'h', ['query', 'help'])
    except getopt.GetoptError, err:
        error('002')
        
    if opts == [] or args != []:
        error('002')
    if len(sys.argv) != 2:
        error('002')

    for k,v in opts:
        if k in ('-h', '--help'):
            operation = "help"
        elif '--query' == k:
            operation = "query"
        else:
            error('002')
            
    if operation == "help":
        help()
    elif operation == "query":
        nfs_status()
    else:
        error("002")
