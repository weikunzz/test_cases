"""
Basic test boilerplate
"""
import os
import unittest
import tempfile

from metadash import app, db


class BasicTestCase(unittest.TestCase):
    # If we shoudl keep fixtures generated by test case
    keep_data = False

    def setUp(self):
        if self.keep_data:
            return self.setUpDev()
        else:
            return self.setUpTest()

    def tearDown(self):
        if self.keep_data:
            return self.tearDownDev()
        else:
            return self.tearDownTest()

    def setUpDev(self):
        self.app = app.test_client()
        with app.app_context():
            db.create_all()

    def tearDownDev(self):
        pass

    def setUpTest(self):
        self.db_path = tempfile.mkdtemp(prefix='metadash_')
        (self.db_fd, self.db_fn) = tempfile.mkstemp(prefix='metadash_db_', dir=self.db_path, text=False)
        app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///{}'.format(self.db_fn)
        app.config['TESTING'] = True
        db.create_all()
        self.app = app.test_client()

    def tearDownTest(self):
        db.session.remove()
        os.close(self.db_fd)
        os.remove(self.db_fn)
        os.rmdir(self.db_path)


class EmptyDBTest(BasicTestCase):
    def test_empty_db(self):
        rv = self.app.get('/')
        assert rv is not None
